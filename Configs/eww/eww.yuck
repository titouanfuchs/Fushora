(include "./modules/workspaces.yuck")

(defwidget bar []
  (centerbox :orientation "h"
    :class "bar"
    (bar-left)
    (time)
    (sidestuff)))

(defwidget bar-left []
  (box
    :class "bar-left"
    :halign "start"
    :space-evenly false
    (workspaces)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "Û∞ìÉ"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
    (metric :label "ÔÅ¥"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "Û∞ãä"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    ))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "üéµ${music}" : ""}))

(defwidget time []
  (box
  time))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "./scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "5%"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
